Angualar JS
	- MVC (Model View Controller) style Javascript Framework
	- 2 ways data binding
    - templating
    - DOM interaction
    - filters
    - directives
    - View and Routing
    - 
Angualar JS: Model
    - Think of the model as data
    - JSON, database data etc.

Angualar JS: View
    - Used to display content & data to a user in a browser
    - HTML
    - Use expression to insert data into View

Angualar JS: Controller
    - Control the functionality of our views
    - performas the interaction between our model and our views
    - Different controllers for different areas in our application

Downloading AngularJS
<script src="https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.8.3/angular.js" integrity="sha512-klc+qN5PPscoGxSzFpetVsCr9sryi2e2vHwZKq43FdFyhSAa7vAqog/Ifl8tzg/8mBZiG2MAKhyjH5oPJp65EA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

2-Way Data Binding
    ng-app -- allow angular js to controll dependes where you declare
    ng-model -- for data binding
    {{var}} -- display your data inputted

Introduction to Directives
    - Directives are markers on the DOM element which tell AngularJS to attach a specified behavior to that DOM element or even transform the DOM element with its children.
    - ng-init == Directive is used to initialize AngularJS Application data.
    
Expression
    - ng-init="numbers=[1,2,3]"
    - {{numbers[0] * numbers[2]}}
    - ng-init="names=['Juan', 'Helen','Mark']"

ng-repeat directive
    - ng-repeat directive --- repeats a set of HTML, a given number of times. The set of HTML will be repeated once per item in a collection.
    - Like looping - forearch array
    - ng-reapet="value in arrays"

Modules
    - The module is a container for the different parts of an application. 
    - var moduleName = angular.module('moduleName', [dependencies]);
    - ng-app="moduleName"
    - moduleName.config(function(), { Do before app runs});
    - moduleName.run(function(), { Do during app runs});
    - moduleName.controller(function(), { Controller Codes });

Controllers
    - naming convention must always CamelCase
    - module.controller("ControllerName",function())
    - ng-controller="ControllerName"
    - $scope is a child object that is used to bind the HTML(view) & Javascript(Controller) in a webpage. 
    - myApp.controller("MyAppController",function($scope))
    - $scope.HTMLVarName
    - In HTML, {{HTMLVarName}}
    - Different ways to put dependencies: myApp.controller("MyAppController", ['$scope', 'others', function($scope, others)])

Filters
    - Filters are used for formatting data displayed to the user. 
    - $scope.names=[
            {
                name: 'Joemar',
                status: 'Single',
                age: 22,
            },
            {
                name: 'Helen',
                status: 'Single',
                age: 19,

            },
            {
                name: 'Edward',
                status: 'Married',
                age: 17,

            },
        ];
    
    - <li ng-repeat="person in persons">{{person.name}}</li>
    - <li ng-repeat="person in persons | orderBy: 'name'">{{person.name}}</li>
    - <li ng-repeat="person in persons | orderBy: 'name' | filter: search">{{person.name}}</li>
    - <li ng-repeat="person in persons | orderBy: 'name' | filter: search">{{person.name}} - {{person.age | currency: 'P'}}</li>

ng-include directive
    - includes HTML from an external file.
    - this is way to reduce repeat component or code
    - create HTML file named "header"
    - <ng-include src="'header.html'"></ng-include>
    - <header ng-include="'header.html'"></header>

ng-show directive
    - ng-show directive
    - {
         name: 'Joemar',
         rate: 100,
         available: true
      },
    
    - <li ng-repeat="person in persons | orderBy: 'name' | filter: search" ng-show="person.available">
    - ng-hide="person.available"

ng-click directive
    - <button ng-click=""></button>
    - <li ng-repeat="person in persons | orderBy: order | filter: search" ng-show="person.available">
    - ng-click="order = 'rate'
    - ng-click="scopeFunctionName(parameter)"
    - 
    - var removePerson = $scope.persons.indexOf(ninja);
    - $scope.persons.splice(removePerson, 1);
    - $scope.removePerson = function(ninja)

ng-submit directive
    - The ng-submit directive specifies a function to run when the form is submitted.
    - <form ng-submit="function()">
    - $scope.function() = function();

ng-src directive
    - The ng-src directive makes sure the image is not displayed wrong before AngularJS has evaluated the code.
    - thumb: 'content/img/Joemar.jpg',
    - ng-src="{{person.thumb}}"

Views and Routes
    -  angularjs is primarily used for single page applications that means when we click on a link it doesn't go to another page exactly it just requests a different view and then that view is placed in the content area right here so it's all going to become clearer
    - create views folder and make file named "directory" and "home"
    - <main ng-view>
    - <script src="app/lib/angular-route.js"></script>
    - var myApp = angular.module('myApp', ['ngRoute']);
    - config() when you want to change configuration of a ngCore module which has already been written in angular.js 
    - myApp.config(['$routeProvider', function($routeProvider)])
    - $routeProvider.when(url, object{templateUrl, controller})
    - templateUrl: 'directory',
    - controller: 'ControllerName',
    - otherwise()
    - redirectTo: '/home',

JSON and $http
    - console.log(angular.toJson($scope.persons));
    - myApp.controller("MyAppController", ['$scope', '$http' , function($scope, $http)])
    - $http.get('URL/Path').succcess(function(data))
    - $scope.persons = data;
    - $http.get('URL/Path').then(function(response))
    - $scope.persons = response.data;

Custom Directives
    - if you want to make function uniquely on your web application
    - <name-directive></name-directive>
    - myApp.directive('nameDirective', [function(){}]);
    -  restrict: 'E',
    - 'E' = can be used only as element
    - 'A' = can be used only as an attribute
    - 'C' = can be used only as a class attribute
    - 'AEC' = can be used as an attribute or element or class
    - <random-names names="persons"></random-names>
    - names:'='
    - templateUrl: 'views/random.html',

























